<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='line-visibility' value='off' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
        <range granularity='1' max='200' min='1' />
      </column>
      <column caption='Map Parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Confirmed&quot;'>
        <calculation class='tableau' formula='&quot;Confirmed&quot;' />
        <members>
          <member value='&quot;Confirmed&quot;' />
          <member value='&quot;Deaths&quot;' />
          <member value='&quot;Recovered&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='covid_19_data (covid_19_data)' inline='true' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_data' name='excel-direct.1yc9ll30fj59t00zmgqxf1war73m'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/urnvm/Downloads/Tableau Projects (1)/covid_19_data.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1yc9ll30fj59t00zmgqxf1war73m' name='covid_19_data' table='[covid_19_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:1' header='yes' lost='0' outcome='1' processed='45615'>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1yc9ll30fj59t00zmgqxf1war73m' name='covid_19_data' table='[covid_19_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:1' header='yes' lost='0' outcome='1' processed='45615'>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H10001:no:A1:H10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>45615</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SNo]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>SNo</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ObservationDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ObservationDate]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>ObservationDate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[IND]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Province/State]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
      <column caption='Indian State group' datatype='string' name='[Province/State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Province/State]' new-bin='true'>
          <bin default-name='false' value='&quot;south states&quot;'>
            <value>&quot;Andaman and Nicobar Islands&quot;</value>
            <value>&quot;Andhra Pradesh&quot;</value>
            <value>&quot;Arunachal Pradesh&quot;</value>
            <value>&quot;Assam&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='S No' datatype='integer' name='[SNo]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_data' datatype='table' name='[__tableau_internal_object_id__].[covid!19!data_4F3350504A7F4278A75A0228CA71CA82]' role='measure' type='quantitative' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country/Region)' hidden='true' name='[Action (Country/Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country/Region,Province/State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country/Region:nk]' />
          <groupfilter function='level-members' level='[none:Province/State:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country/Region, Province/State'>
          <field>[Country/Region]</field>
          <field>[Province/State]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Province/State:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#2f6891'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#33789d'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#3e99b4'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dadar Nagar Haveli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#53a9bd'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#626d78'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#808a8f'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#87c6cc'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#a0d4d1'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#a1a7a9'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country/Region:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;occupied Palestinian territory&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Ireland&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;(&apos;St. Martin&apos;,)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot; Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mainland China&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_data' id='covid!19!data_4F3350504A7F4278A75A0228CA71CA82'>
            <properties context=''>
              <relation connection='excel-direct.1yc9ll30fj59t00zmgqxf1war73m' name='covid_19_data' table='[covid_19_data$]' type='table'>
                <columns gridOrigin='A1:H10001:no:A1:H10001:1' header='yes' lost='0' outcome='1' processed='45615'>
                  <column datatype='integer' name='SNo' ordinal='0' />
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='ObservationDate' ordinal='1' />
                  <column datatype='string' name='Province/State' ordinal='2' />
                  <column datatype='string' name='Country/Region' ordinal='3' />
                  <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
                  <column datatype='integer' name='Confirmed' ordinal='5' />
                  <column datatype='integer' name='Deaths' ordinal='6' />
                  <column datatype='integer' name='Recovered' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
      <datasources>
        <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
          <range granularity='1' max='200' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
        <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
        <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country/Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Ecuador&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Indonesia&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Mainland China&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Pakistan&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Portugal&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Saudi Arabia&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Sweden&quot;' />
                <groupfilter function='member' level='[none:Country/Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 4 (generated)' name='[Action4_82D248CFECC2401DA4F672AFC590E3D0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Global Covid - 19 Summary' type='sheet' worksheet='Covid - 19 Summary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Global Covid - 19 Summary' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4_A22C0DF434ED46F59456422C7A384BAB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='India Covid Summary' type='sheet' worksheet='Top 10 Confirmed Cases in States of INDIA ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='India Covid Summary' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5_0D26EDD5C1694FBBBCB4EB1552FDEE0C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='India Covid Summary' type='sheet' worksheet='Top 10 Recovered States of  INDIA' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='India Covid Summary' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_112A05D04829478DA498C64CD1989051]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Global Covid - 19 Summary' type='sheet' worksheet='Global Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Global Covid - 19 Summary' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6_8AE1336B0A4B4EB79479C1B0C0094149]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='India Covid Summary' type='sheet' worksheet='Top 10 Deaths in States of India' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='India Covid Summary' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_DA88073CAA6E4F1088084112D58E1425]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Global Covid - 19 Summary' type='sheet' worksheet='Top 10 Confirmed Cases Countries' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Global Covid - 19 Summary' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Covid - 19 Summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Global Covid - 19 Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='200' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action5_112A05D04829478DA498C64CD1989051]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[:Measure Names]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Multiple Values]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontname='Tableau Bold' fontsize='12'><![CDATA[<[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9AB8BA32-4783-43BB-982A-4605E4FED827}' />
    </worksheet>
    <worksheet name='Global Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Global Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='200' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action6_DA88073CAA6E4F1088084112D58E1425]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Longitude (generated)]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Longitude (generated)]' field-type='quantitative' max='14805396.266321626' min='-19740724.361208633' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Latitude (generated)]' field-type='quantitative' max='10267273.680988301' min='-9600799.6541297939' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' />
              <size column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' />
              <tooltip column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' />
              <tooltip column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff5500' />
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Latitude (generated)]</rows>
        <cols>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{27A72622-F98A-490D-8DAD-B849E03242D4}' />
    </worksheet>
    <worksheet name='Top 10 Confirmed Cases Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'> Confirmed Cases </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='200' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='None' name='[none:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action5_112A05D04829478DA498C64CD1989051]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Confirmed:qk]' included-values='in-range'>
            <min>-302844</min>
            <max>3049037</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Confirmed:qk]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</rows>
        <cols>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{7309F75F-06D0-428C-A26F-C6A06C3FDBE7}' />
    </worksheet>
    <worksheet name='Top 10 Confirmed Cases in States of INDIA '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Top 10 Confirmed Cases in India</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='200' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Inclusions (Country/Region,Province/State)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Andhra Pradesh&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Delhi&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Karnataka&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Kerala&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Maharashtra&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Odisha&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Tamil Nadu&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Telangana&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Uttar Pradesh&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;West Bengal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Inclusions (Country/Region,Province/State)]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' />
              <color column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Province/State:nk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A3A548B9-C799-413E-BF83-584BCE07AEAD}' />
    </worksheet>
    <worksheet name='Top 10 Death Cases Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Death Cases </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='200' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action2_E067D562EEE44B00823E8BE498F18A38]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' />
              <color column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8C92F364-860E-4B85-8DD0-1962269DFFF1}' />
    </worksheet>
    <worksheet name='Top 10 Deaths in States of India'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Top 10 Deaths in States of India</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='200' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Inclusions (Country/Region,Province/State)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Andhra Pradesh&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Delhi&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Gujarat&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Karnataka&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Madhya Pradesh&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Maharashtra&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Punjab&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Tamil Nadu&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Uttar Pradesh&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;West Bengal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Province/State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Inclusions (Country/Region,Province/State)]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='width' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Province/State:nk]' value='64' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]</rows>
        <cols>([federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk] / [federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Province/State:nk])</cols>
      </table>
      <simple-id uuid='{1D98AEC2-AF51-4CB0-B104-BC0D19FDE98C}' />
    </worksheet>
    <worksheet name='Top 10 Recovered States of  INDIA'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Top 10 Recovered states of INDIA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='200' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Inclusions (Country/Region,Province/State)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Andhra Pradesh&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Delhi&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Karnataka&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Kerala&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Maharashtra&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Odisha&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Tamil Nadu&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Telangana&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;Uttar Pradesh&quot;' />
                <groupfilter function='member' level='[none:Province/State:nk]' member='&quot;West Bengal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Province/State:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Inclusions (Country/Region,Province/State)]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' />
              <lod column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk] / [federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Province/State:nk])</rows>
        <cols>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{8C20DB67-DC0D-4493-8BC3-21DA281E31B1}' />
    </worksheet>
    <worksheet name='Top 10 Recoveries Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'> Recovered Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.1qv7fnh1h5qzde1gad15r05kvjxn' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='200' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1qv7fnh1h5qzde1gad15r05kvjxn'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]'>
            <groupfilter function='level-members' level='[Country/Region]' user:ui-action-filter='[Action2_E067D562EEE44B00823E8BE498F18A38]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Action (Country/Region)]</column>
            <column>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' />
              <text column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' />
              <color column='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9BF48830-4099-4841-BEA6-445487EDCBE9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Global Covid - 19 Summary'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N parameter' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
          <range granularity='1' max='200' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='17' param='horz' type-v2='layout-flow' w='99016' x='492' y='929'>
            <zone h='98142' id='10' param='horz' type-v2='layout-flow' w='89176' x='492' y='929'>
              <zone h='98142' id='8' type-v2='layout-basic' w='89176' x='492' y='929'>
                <zone h='17146' id='3' name='Covid - 19 Summary' w='89176' x='492' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37135' id='14' name='Global Map' show-title='false' w='89176' x='492' y='18075'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43861' id='24' name='Top 10 Confirmed Cases Countries' w='32436' x='492' y='55210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43861' id='26' name='Top 10 Death Cases Countries' w='32943' x='32928' y='55210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43861' id='28' name='Top 10 Recoveries Countries' w='23797' x='65871' y='55210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='16' is-fixed='true' param='vert' type-v2='layout-flow' w='9840' x='89668' y='929'>
              <zone custom-title='true' h='9408' id='19' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9840' x='89668' y='929'>
                <formatted-text>
                  <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>Top N parameter</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8478' id='25' name='Top 10 Confirmed Cases Countries' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' type-v2='color' w='9840' x='89668' y='10337'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8478' id='27' name='Top 10 Death Cases Countries' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' type-v2='color' w='9840' x='89668' y='18815'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18118' id='29' name='Top 10 Recoveries Countries' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' type-v2='color' w='9840' x='89668' y='27293'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='44' param='vert' type-v2='layout-flow' w='99016' x='492' y='929'>
                <zone fixed-size='130' h='17146' id='3' is-fixed='true' name='Covid - 19 Summary' w='89176' x='492' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='9408' id='19' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9840' x='89668' y='929'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>Top N parameter</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37135' id='14' is-fixed='true' name='Global Map' show-title='false' w='89176' x='492' y='18075'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43861' id='24' is-fixed='true' name='Top 10 Confirmed Cases Countries' w='32436' x='492' y='55210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='25' name='Top 10 Confirmed Cases Countries' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' type-v2='color' w='9840' x='89668' y='10337'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43861' id='26' is-fixed='true' name='Top 10 Death Cases Countries' w='32943' x='32928' y='55210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='27' name='Top 10 Death Cases Countries' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' type-v2='color' w='9840' x='89668' y='18815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43861' id='28' is-fixed='true' name='Top 10 Recoveries Countries' w='23797' x='65871' y='55210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18118' id='29' name='Top 10 Recoveries Countries' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' type-v2='color' w='9840' x='89668' y='27293'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AD6CB990-89CE-4F97-B27D-2CE0242452E2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='India Covid Summary'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='7' param='horz' type-v2='layout-flow' w='99016' x='492' y='929'>
            <zone h='98142' id='5' type-v2='layout-basic' w='92312' x='492' y='929'>
              <zone h='49071' id='3' name='Top 10 Confirmed Cases in States of INDIA ' w='48803' x='492' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='9' name='Top 10 Deaths in States of India' w='92312' x='492' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='11' name='Top 10 Recovered States of  INDIA' w='43509' x='49295' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='109' h='98142' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='6704' x='92804' y='929'>
              <zone h='8478' id='8' name='Top 10 Confirmed Cases in States of INDIA ' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' type-v2='color' w='6704' x='92804' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8478' id='10' name='Top 10 Deaths in States of India' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' type-v2='color' w='6704' x='92804' y='9407'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8478' id='12' name='Top 10 Recovered States of  INDIA' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' type-v2='color' w='6704' x='92804' y='17885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='25' param='vert' type-v2='layout-flow' w='99016' x='492' y='929'>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Top 10 Confirmed Cases in States of INDIA ' w='48803' x='492' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='8' name='Top 10 Confirmed Cases in States of INDIA ' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' type-v2='color' w='6704' x='92804' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='11' is-fixed='true' name='Top 10 Recovered States of  INDIA' w='43509' x='49295' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='12' name='Top 10 Recovered States of  INDIA' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' type-v2='color' w='6704' x='92804' y='17885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='9' is-fixed='true' name='Top 10 Deaths in States of India' w='92312' x='492' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='10' name='Top 10 Deaths in States of India' pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' type-v2='color' w='6704' x='92804' y='9407'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{46CBDF2D-71CA-4848-905B-8B8E508DE0E4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 10 Confirmed Cases Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Confirmed:qk]</field>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C7BDE2B-0D5C-4A46-8B88-B12BE81B0482}' />
    </window>
    <window class='worksheet' name='Top 10 Death Cases Countries'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{352E3816-19BD-44F0-B654-33B542EC340D}' />
    </window>
    <window class='worksheet' name='Top 10 Recoveries Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5921A20-6D13-41D0-8883-A7AE08CB3328}' />
    </window>
    <window class='worksheet' name='Covid - 19 Summary'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7619096C-187F-4DB1-BF32-F7A444005F38}' />
    </window>
    <window class='worksheet' name='Global Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' type='size' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</field>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75360B04-0242-40B7-B944-4C155986F1D8}' />
    </window>
    <window class='dashboard' name='Global Covid - 19 Summary'>
      <viewpoints>
        <viewpoint name='Covid - 19 Summary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</field>
                    <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]</field>
                    <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]</field>
                    <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]</field>
                    <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Latitude (generated)]</field>
                    <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Brazil&quot;</value>
                  <value>1044918839</value>
                  <value>30930502</value>
                  <value>891483698</value>
                  <value>-11.694</value>
                  <value>-48.978</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Top 10 Confirmed Cases Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Death Cases Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Recoveries Countries'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{EDDD3815-2068-46CA-9AC4-55152F741C00}' />
    </window>
    <window class='worksheet' name='Top 10 Confirmed Cases in States of INDIA '>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[none:Country/Region:nk]</field>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Confirmed:qk]</field>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3D1C2AE-3CCC-4641-B962-FFE71F6AFECC}' />
    </window>
    <window class='worksheet' name='Top 10 Deaths in States of India'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2637042-D910-4B9C-AD2A-463EE8E1BB2C}' />
    </window>
    <window class='worksheet' name='Top 10 Recovered States of  INDIA'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[IND]</field>
            <field>[federated.1qv7fnh1h5qzde1gad15r05kvjxn].[sum:Recovered:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC194C14-DCE1-4DDA-B649-385979319D03}' />
    </window>
    <window class='dashboard' maximized='true' name='India Covid Summary'>
      <viewpoints>
        <viewpoint name='Top 10 Confirmed Cases in States of INDIA '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Deaths in States of India'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Recovered States of  INDIA'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{45D76A6E-784B-43F6-AB28-F175D19E2626}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid - 19 Summary' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAJa0lEQVR4nO3Ya3BU5R3H8e/Z7CYmuwjMIMkmxECyuRButhTQoYLYoSBKFe293lDb2han
      TjutLaNTqg5Dx6mlooxyqdYrKGCxAhEcLlJMsGoCcgnXBBKDm4TcSNiLyTl942TGcZxWbUnJ
      //d5d+bsPvOcZ/e75zzreJ7nIWKUH6CjpRnPc/t6LiLnnB/A81x0IxCLfH09AZG+pADENAUg
      pikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUg
      pikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUg
      pikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUg
      pikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUg
      pikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUg
      pikAMU0BiGkKQExTAGKaAhDT/H09gS/i6LHjtLa2AlBSXMSAAQMASCaTVB86jOM4jCwpJiUl
      hZraWlpb24hEChh44YV4nkdHRwddZ8+SHQ73jtnd3c2eve/hui5paWmMGT0Kx3E4ebKO5tOn
      GTN6NH5/CoePHMGf4ic/fwQdHWdobGwkEing0KHDZGVlMmjQoD5ZE6s8z6OxsYlAaoDBgwbR
      1dXF4SNHGRAKEYkU4DgOruuyb99+MjIyiEQKAEhZsGDBgkSsq4+n//n8/sGFtHe0097ewfC8
      PEKhEADrX3mVfQcO8PY771JesZvscJgX16ylubmZ5Suf5MppU9mwqYxFD/2RgD/AuLFjeseM
      RqPct+B+QqEgZ86coXRkCYlEgnt/dz+vbdnCVTO/zpq16yjbvIVd5RW4rksikWDVS2soKChg
      4R8eYvY1swgEAn21LOZ4nsfjy1eweMlj5OcPJ+/ii1n55FOc+iDKhk1ldJw5w+hRpbxbWcVD
      D/+J+vcbmDZ1CnAePwL19PQQjUYJZ4WZOGE8mZlDe89dd+1s5lz7DUaWFOP3+4kU5HPnj+5g
      0sQJBIMZgMPkyy7jqpkzPjHu+w0NBIMZZGdnM3XK5TiOw6sbNjHl8smkp2fg9rhs3baDu+/6
      GT++4zY2b3kdgHg8wVNPP8P3v/ttMjIyztUyyEeunX0NXxn/5d7jO26by8wZ07k4Nxefz0dP
      Tw9r1q7jhjnXfex9520AjuNw+9xbyEhP5+HFS9hVXtF7znVdnnnuBbbv2MnoUaUAbN/+Bs+9
      sJrheXmkpaWSlZVJii/lE+PmDsvlhuvnEI1G+dU98zl16hRbt2/n8smT8VyXeDxOPB4nPT2d
      YDBILB4HoK6+nurqQxQXF52bBZBejuOQHQ7jOE7vcUtrK089/SxHjh2jID+fN8srGHLREAYP
      Hkx3dzfd3d3AebwHOBuLkZOTQ2EkQuWePbS0tNDU1EQikSQWj/GLn99F7YmTPLhwEZeMHcsV
      U6dw9ayZ3HX3Lzl2vIZRpSM/Nl5HRwdNTc04jsOkCRPwPI+yzVuoPnSYUCjE4iWP0tLayo6d
      O8nJyeZg9SFaWlsZnpcHQGGkgAnjx/PkX5/hvvm/6f0w5NzzPI+2tnbu/e09vL51G+v+tp6i
      wgjRaCOrX1xD8+nT1NSeoKen5/wNwOc4bNi4iZraExRGCpj+tSt55LGlXDZpEtHGRv68ZCmp
      qQF+ePtc2trbWLzkUWKxGJdOmkhRYYQHFi6ioaEBgM7OToLBDNLS0hhVWsoTK1YSi8W49aYb
      mXbFVK6cdgXJZJIHFi5i9tWzuHTSRB5ftoJAIMC8n9xJS0sL2dlhZl01g6q9ezleU0NBfn4f
      r5AdyWSSX8+/l0Q8zqrVL3G6uYW6+noeeXQpgwYN5OYbf0DJR3fm9/btZ1d5OUMvGsI98+/D
      8TzPaz/diOd5fXwZX0w8HufZ51dx26034/N9tic7z/NYtuIvzL3lJlJTU/9HM5T/J+UVu/EH
      Av0nAJHP47zdBIv8N/TLAM7GYmzcVEbF7rc+9TWJRJInlq+kYvdb7PzHrs80fnd3N08/+/wX
      naacA57nsXX7DtasfZmamtpPnD9vN8GfxvM8Hl+2nGlTp5KVOZQjR4+xddt2vnTJOFzX5cTJ
      k3z44YdkZWbyblUVl4wbSzyRYGPZa8RiMbIyMzl2vIZkMklGRjojRgwnmBHkzfIKZs6YTltb
      O2/9821qT5zo60uV/1DZ5s3cPW8eS59Yxryf3snWbTtIDQSYMWN6/7sDuK5LNBpl3NgxhMNh
      Xlq7jm9eP4dXN27ieE0tI0tKOHjoMCXFxYwuLSU7HObI0aPs33+A9AsuIJFMEg5n0dDQwKUT
      J7LrzQqeX7WazMyhvLz+Fda9vJ7vfedb+P397rej33JwGDJkCMNyctjxxk5qamvZu28fdXV1
      /S8An89HcVExf9+wkcrKKgYOvJB3KitJDQTw+Rz8fj8+xwE+vun3B/x8dfJkAn4//pQUfD4f
      KR99yYPBIK2tbYwaOZJAaoDKqj309PT0wdXJ5+G6LpVVVdTV11NSXERLSwv5I0ZQV/9+//wX
      yHVdDhysJhQKkh0Os2//AQojETo7OxkwIETDqVPk5uYSjUbJHDqUxqYmXNcld9gwOjrO4Hku
      ra1t5ORkc+qDKJmZQzlw4CDDh+fh9/tpbGzEcRyKCgv7+lLl3/A8j4PV1XR1naWkuIhQKERN
      TS2dXZ0UFxf3zwBE/lP97hFI5LNQAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDT
      FICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpv0LHb7jkKLhi98AAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global Covid - 19 Summary' width='192'>
      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
      qiq5OTmsXnUxRqORsrK9vL9nD82trRxoaKDf24/T6SQzI4NoNEZLSyt5ubmkpabi8/nIy80l
      y+3+rGILw7C/vp5oNMrcOXMwGAysWrkCj6ePg4cO8cabm2hrb6eh4SCDwSCLFixAUVSy3G4u
      WbUSl9NJU3MLjU1NLFuymH2VldjtNmaeWcKvfvPbiVcFUhSFB373B7xeLzqdjquv+gr3/fh+
      Ll19CS+8+DdisRiKonD52rX88Mf3EwqFSCaTXLp6FU8+vZ533t1CIpHAaDIyGBikYHI+nV3d
      7KusIhqLcsuN1w8dJX7569+wbOkSUlNTeOC3v0dVVW656UZaWlowmUxcc/VVPPbEk9z/ox9i
      MBjG+Jc5PT3x1NO8s2UryUQSo9HI/voDDAwMEI/HufH6a/nKlf8BwH0/+SlrVq/m2ef/itls
      IplIsvP93ShKknvuvgtXipP//v4PsZjN/Pf/v5uaD2rR6w0TfzRoOBLh1Vdf54rLPz9UTzwe
      yWSSF178O/9+xTpkWR7FEgqniqqqPPf8X7ni8s8f9w5pwgdAEIZjQjaCBWGknDYBUFWVhoMH
      eeqZ9bS1tx/zPYlkkj89/Bfe372H0rK9x71sRVF49PEnRqqowghQFIWn1z/HM88+R29v7ye+
      r2xvOYlEgvXPPX/M1ydcI/iTRCIRnnx6PXd/505i8TiPPPo48USc1asu5qWXN5BIJFi48Hz2
      lpdzZskMPJ4+HnviKSKRCGlpaQRDQeKxOMFQiC9ccTkvb9jApOxJzJxZwltvb6aluXWsv6Lw
      L1RVpW7/fu649Wb+8OCfuPSSVWzfsZNlS5fQ6/FQW1vHsqVLeObZ55EkiYp9lXT39LDmkkt4
      7Y2NTM7P47I1l54+R4BoLIbNZsVkMtHn6cNoNDBlcgH79lXhdDpJSXGRlprKtKIi8vPz6fV4
      aG5p4fOXrcHn87FsyWLi8ThOh4NNmzfj7fexY9cu3tq0mXWXXYbD6RjrrygcQ2pqKrFYjNc3
      bsRoNPDulq14PB7CkQhtbe3MnTOL2bNmkp2VRXHRNNo7OohEIyQShyfQOm0C4HQ4yM7K5pFH
      H2dwcJCurm4qq6oOX/2vl5H1eiRJQq/Xo5Mk9HoZl8uJ252JXq9HknTo9Xr0epkzpk/HaDCw
      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
    </thumbnail>
    <thumbnail height='192' name='Global Map' width='192'>
      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
      8f8BOXYZ98fn4SIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='India Covid Summary' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Confirmed Cases Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Confirmed Cases in States of INDIA ' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Death Cases Countries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAF5ElEQVR4nO3ay24TdxiG8fc/PsWn2IlzIA404dBQWlVV201X3fYiexW9hEqlQgIVgQLl
      GELSQuqGgIPj2I7t6cItAmkqVUAmRe/zk6JknCy+kfJ4Po8mxHEcCzAVnfQAwEkiAFjLvn5w
      +eaGrt1+fFKzAKl7I4Crtzb1/Q8/n9QsQOpYgWAtMYBKsaBsJtJMtaRqqaCvP/lIuWwm7dmA
      Y5dNevHM4oye7La1trKgSrGga79uKQoh7dmAY5d4BYjjWCFIQUE/3XioL9dOa3G2mvZswLFL
      DGDrj+f64sKyXnZ7+mhxVsPRWPvdXtqzAccucQXq9gb68fqDV8f3t1upDQSkibtAsJZ4BZir
      V/T5+SXd2tjR6tKsctmMLt/c0Hy9ok/PLenBdkvN+brmamVt/L6rpbmabtz/XaWpvGami1p/
      +DTt8wDeSuIVoDyVlyTlcxnttg9U/Pu4XJx8DyHolztb2n3RUaNe0ebTZ7q4sqDvvrmkvf1u
      SqMD7y4xgJfdnq7e3tLZZkPP2gdSHCubibR/0NO12491ttnQxZVF3d1q6c7mjlaWGnrROdSt
      jadanq+nfQ7AW0tcgTrdvj47v6Qr65v6+My87m239Mnqou49bumz801dWd9UqZDT/kFPjVpZ
      O7tt3dv+U8VCTvlsRiFIPGSND0FiAIPhSNfv/iZJuv1o543fXb+7LUlqD0eSpGftg8lVQpO7
      RyxA+JBwFwjWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWsq8f
      rC7P69uv1k5qFiB1bwQwzpc1rCyc1CxA6liBYI0AYC2b9OJCrajmbFmD4Uh3fnuhTBQURUHD
      0Vi5zKSZQi6jRnVKj1r7iuNUZwbem8QAMlGYfIWgr87N6fFuRxdOTSsTRdps7etUvaSD/lBj
      /vPxgfvXFajTO1IUBe11+nrZHehoONbRcKTl2bKe7B2kOSNwbBKvAH+86KrdHah/NFIcS+M4
      1vrWnobjyQoUx9JO+1CKxfqDD1piAONY6vaHb7zWOxpJkoaj0fFPBaQkcQXKZSOdPzWtXCbS
      bKWgWikvSQpBWl2oKgpBzZmS5qanJEm1Ul5Bkw/G5UJiU8D/UmIAmRDUah9qrVnT0kxJp+cq
      CpI+Xqppr9PXxeW62ocDnWlU1KhOaa1ZUzYTaXWhquZsOeVTAN5eYgCD4VhnGhX1j0Y6HIzU
      GwwVgrS739PpRllTuYyqU7m/PyT31OlN1qWzC9N6ftBP9QSAd5EYQK2cl8Jk7y/kMopC0GK9
      pKPRWFEI2my9VL1c0OBopPnpomYrBU2X8rr2sKXqVE4h7bMA3lLiwv6809fzzj/v5JNbnoVs
      pP5wrPWtvcnfvPZO32ofvvp5d793TKMC799/fhSiPxwf5xzAieBZIFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFjLvn6wUCvq0umZk5oFSN1f
      ZCw/QLyxTGIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Deaths in States of India' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAT9klEQVR4nO3dyXMbZ3rH8W93oxv7ShLcRVELRdmSLFl24k2uyJ5xKrZznUMuuc1UDnOZ
      Wy75Q3KeSlWSqnEOE89hFnnsii3LI1u7KIoUd4AgAQLE0li60Z2DRpRlkbIWcJH6+ZzUBNDv
      AwG/t99udL+tuK7rIoRHqbtdgBC7aUcDUKvVcBxnJ5sU4pF2NAAy2vKuW9e+4y9XbjzyOcXV
      VexN/l7KzvCnc5/x+RdfMLe89tDj5ZV5ZjLFLdfrtpt8e+k6AJcufMnnn39ByWwB4Hv8tyDE
      02nXctzK1PnHn57ku2++pFCq090VIb3vIAuz8+SXFiAYpTp7i4Nn/4H8jW/wR+KkR49RzWdQ
      7Do0ihz6m/e58NVXZBMGdTdAT1hleTlD7+gRHKfFn25cxB/rplHKYFsOb3/wMREdcnO3CXf1
      A7CYWeXUsWH++LvfgU+TfQCxAxSNttXCtlvML+UZjivcmFqgUquSy+ex8GPVy6R7Bzh4cIRK
      E9599ww3v/oU1x+nbmv4sfif//wPDh47yjcXrqL7dG7NZhhM+ikWS2RmbqPEhylk5iibLRJ+
      m2rzbvN3ltY4MJgCoFEtslTxcXx/nOGjr6Hs5FGgarVKKBRCVSV3XjM/PcFaQ6Uv5mMhX2Ns
      Xw+TcxlSXT0ojgvYdEcDzK+1CPlcRveP8Ml//xevvnKEZvwgcTtPtGeI2ZlZdMekoYQx2mW+
      /eYvnHrvI+KhCIWlKcLdQyiWSUiHaN8BglT54sIE7779GgCzd2bYd2CUaj5D00hJAMTe1Lbq
      5It1QkEf4UgUVVEeek4pv0y+YnFw/xDKJo8DtFsmDUcnHNA3fVwCIF4orWYTn2E8EJhWqwVO
      GyMQfOj58k0UL5TFxXlq1Sp3pqYorFdZXV7k4sUrmFWT6nqBW1MztJ37fb4EQLxwzOo6wXgX
      pZUVihWTgXSK8uoqlXKZ0tIc+b8eAgUJgHjBBAIBdMNPOBggFApiN0zWKib+YJBWyyIQDqFx
      f3i0sQ/QaDS2/Ycq0zQJBAKyDyD2jI0fwjRN2/YAqKqKpmkSALFnbARA1zc/TNRJrVYLwzAk
      AGLPkG+i8DQJgPA0CYDwNAmA8DQJgPA0CYDwtD13QUy73ebLL79kcXGRn/3sZ7TbbT799FM+
      /vhjJiYmAIhEIty8eZNXX30V0zQpl8ucOHFiyzMChdjKntsCaJrG22+/TTqdRtM0AMLhMI7j
      MDAwQKFQIJ/P0263cV2X3/72t7iuK19+8VT23BYAYHp6moMHDwJgGAaGYQB3e36A0dFRjh49
      yueff874+Dj5fH7XahXPtz0ZgFgsRjqd5ttvv2VoaAjTNLlx4wb1ep1Go0Gr1eLq1aucPXsW
      0zRptVrYto3PtyffjtjD5IIY4Wm72mVOzq/wb//+v9u2/n/95w945fDgtq1fPP86HACH6clJ
      ag2L/r40ihEm7ofFfJnR4YGHnm02Wly/k+1sCd9TrTe3bd3ixdDhsYjKwbEj+P0GjUqNlXyO
      ldwKpfUSruvKxFhiz+n4YLxWXCEUT6MoCj7FpWa7BPS7hyglAGKv6fg+QNPRGOhNUCspdBsK
      xYaLjo2iKLLzK/acjgcg1dUNQCyZAKA/3OkWhOgc6ZKFp0kAhKdJAISnSQCEp0kAhKdJAISn
      SQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKd1/Iqw1eVFilWb
      7pgfyxcm6Ye5lRKHR/d1uikhnlnHAzA1NUWqdx/VSp2qa9LyQc1s4jgOjuN0ujkhnknHh0Ch
      aJK4YVGqO+gqmDb4fQqKosgEtmLP6fgWYLg/TbFmMzocxzAUyk3wubYEQOxJnZ8VIt1P6nvL
      PcFOtyBE58hRIOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA
      4WkSAOFpEgDhaRIA4WkSAOFpEgDhaR2/IuzO5A0sJUgqomP5wqSCCjPZIkcPj3a6KSGeWccD
      UK3W0CN+GmaLitvErkLLasmsEGJP6vgQ6MDYUQJOlaql4FehZoOhgaIoqKqMuMTe0vEtQG19
      DS3ax0g8gq5Dpangw5YZIcSe1PEA9A4+OANcyt/pFoToHBmTCE+TAAhPkwAIT5MACE+TAAhP
      kwAIT5MACE+TAAhPkwAIT5MACE/bNAC///3vd7oOIXbFpgGYmJjgiy++2OlahNhxWw6BLl26
      xCeffCLn8IsX2qZng/7iF7/Y+LecxixeZJtuAQzDoF6vk1ucYd20dromIXbMltcDfPeX/8O0
      ILVq8sbfntrJmoTYMVsGYKivn5bqJ5oa3Ml6hNhRW+4Ez87PUylX8GnuE63Qbta4eOka+aU5
      5nMFzHKBqxNTz1yoENth0y3ArSsXWCnWqDQypPr3P8HqXObmFzF8Ko1mm2q9hFsD17FkVgix
      J20agMPHTmOpAcYOH+DW1BLQ+3hrcyzMWp1sbhX/vv0EAio120XXQFVVmRVC7DmbBqCcz/Dt
      xYtM3Jrm3ff//vHXphocP3mSA7UamqKi6wq1loKG3al6heioTbvkRHqY3mSISinD5J3ME680
      HA4TCAXR9ACxsJ9wOPzMhQqxHbY8CnT6zbN0Td1kYN9jDn+EeA5tOSifuHyediDOWm55J+sR
      YkdtGQDd8HPt4nmUQHQn6xFiR20agNz8JMvFJqmuXnrTyZ2uSYgds+k+wJ3FZX7y05+A0+Tq
      zet0v/7qTtclxI7YNADdsRB//MMfAHj51Bs7WpAQO2mLH8Je4/CxnS5FiJ0nP80KT5MACE+T
      AAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhP6/htUu9d9/v9CbVcQJUJtsQe1PEALM5Nk8sV
      iMfiWP4Q/WGFa/N53v0bOaFO7D0dHwJFIxEsV8UwAqiuRbFq0R0LyqwQYk/qeACKxSIBXaHl
      KCRDBg3Fh0/TZFYIsSd1fAh0YOylB5b7Ot2AEB0kXbLwNAmA8DQJgPA0CYDwNAmA8DQJgPA0
      CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8LSOXxFmtZpYbRe/
      ruEoGj7FpWW38RtGp5sS4pl1PAAry1kK+Tz+YATbCNAXUphYKvL2ayc73dS2cRxn4/pl27Zx
      XRefz0e73UbTtI2L++89x3Vdud75OdXxAISCfqqxbsKqS8WxKdUUklH/czMrRLFY5Ne//jW/
      /OUvAbh06RJfffUVJ06coFarkUgkcF2X2dlZDhw4QDQaRdd1jhw5ssuVi6fR8W7r1q1buG0L
      NJ3uaABL8+PXjedmVohkMsn4+PjG8smTJzl+/DipVApN08hms3R1deE4DqZpcvHiRcbGxnax
      YvEsOr4FeOOdv3tguafTDWyzXC7H1atXGRoaIhqNUqlUGB8fx+fzsbCwwJEjR8hkMvh8PqLR
      KGfOnOHatWscP358t0sXT6HjAXje9fb28qtf/QrLslhbW+Po0aMbj3344Yfb2rZlWfzmN7/h
      7NmzpNNpZmZmmJiY4M033ySbzTI/P49hGOTzeU6fPk0wGGR2dpY333xzW+t6kXk6AMVGg2b7
      EfslkSjLNfOp1q2rKl3BwJO9Rtc5duwYlmUBcPHiRSKRCAsLC5RKJVRVpVKpoOs6k5OT3Lx5
      k5///OdPVZ+4y9MBODe/xOx6eVvW3RcO8U8vPdmOsW3bLC0t0Wg0SCQS9Pb2EgqFWFxcRFVV
      JiYm+PDDD7l8+TL9/f0MDg7y3Xff8c4772zLe/ACTwdgLzp06BC6rjMzM8Nbb71FNpvl1KlT
      qKrKmTNnaDabnD17llgshqqqNBqN3S75uSYB2EN8Ph8HDhwAYHh4GIChoaGNx0OhEKFQ6IHX
      hMPhnSvwBSQB2CUXl3N8mclu2/r/5eQJfM/BYefdJgHYJe5uF7AJ0zSZnZ3lpZdewnEcvv76
      a8LhMPF4nMnJSY4cOcKtW7eIx+OMjIyg6zq6rhONRne79KcmXYTYsL6+zvT09Mby2NgYU1NT
      XLlyhWAwyMDAAGfOnKHVanHz5k3Onz//3A/BJABiQ39/P4HA3UO3qqpSKpUA+OijjxgaGuLa
      tWtcuHCB119/nWKxSLvdfuBWWM8jGQKJDRMTExQKBS5fvkwsFmNmZoauri6uX7/OwsICZ86c
      IZvN4vf7OXXqFH6/n3w+T0/P8/Z7/30SALFhfHyc8fFxbNtG0zRGR0c3Hrt3qse98f7+/ft3
      o8SOkwB41NfZDG13e3bFByMRRmLxJ3qN67qcO3eOU6dOkUwmKZfLnD9/nvfee4/PPvuMSCRC
      IBBgeXmZ06dP4/P5WFpa4tixY89UqwTAo26uFbYtAD5VfeIAOI5DIpGgWq2STCY3zhxWVZW3
      3nqLP//5zyiKwsDAAFeuXGF2drYj52bJTrDYEzRNe+BHvkgkgqqqtNttzp07x/vvv8/Y2Bjf
      fPMN4XCY0dFRCoXCM7crWwCxJzSbTebn5wkGg2QyGXp7e2k2m0xNTaFpGpcvXyaRSHD69GkO
      HTqEqqrk8/lnblcCIPYEv9/PBx988MDf7u1of/+U9O/bt2/fM7crARA7brZcYrK4tm3rf294
      /2OfBtLxADhti6btork2jmpgaFCrt4hGQj/+YuEJpmWzWn+66yweh/uIE01urK1yNb+ysdzx
      ACwv3KbQjJFQTSqqTk9AYSq3zpuvvtLppoR4Yq7LA0e/On4UaGBwGJ+moGg6qttmvd4mETae
      m1khhLd0PABzs7OsrmRxNZ10PIxrBAkGgs/NrBDCWzo+BBo5fJyRw/eXU51uQIgOki5ZeJoE
      QHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHhax0+H
      bpgVmm2VoK7QVg38mkvVbBGLPt+TqIoXU8cDMDV9B01R0XU/LZ9Od0DhTq7MG6+e6HRTQjyz
      jg+BAoEg3TE/TefuJZHlept4WO90M0J0ROenRWlbZMsavckAuh8KpktIZl8Re1THv5mHxl9+
      YFkuiRR7meK6d+eIqFQquNs0Weo99Xodv9+/cXG8ZbdZK2/f/DCJaBC/fj/jjuM8cGF+3bax
      t2mmCk1RCT2i7Va7TetR9yh+RmHd98DNK37YvmlZ23abJl1VMTRty7Ytp421je896Lv/3h3H
      QVGUjeUftr0RgJ1QrVYJhUK7NjvEDz8Ir7S92+3vZtv3vt5b3clmV38HWJiZpmE7FFeWyK3d
      v2F1sVh6vBW0GxTLdeDu1uXHkvzQh+DY3L55ne8uX8VstTd9TbVSYT2fpwVUSzmWCxXyhR9O
      yupS+pGat/oCWPUylUabXC73I9WDY1s0W9bGcrNewWzYP/q6R7X/ENdl8sY1Jqdmcb7XN+bz
      +Y3PpVmrPdHW64dt5/N5yvllCpU6+ULhoc+t2ajTdgHX4fbEdW5O3MZu/3g/7brOQzNG3+/9
      XQr5Alg18qUq9XoTx2rs7t5ps2WytLSCVV7BF3Wori6iBOJUChlm54KMHRxkZnaR/qF9ZObv
      0Ns/yEouR7q/j+xSlv0jfVy/MU9PuovluSkOH3+FYiZD79AQK7kcyfQA/T3JrQtQfYzsG2Bx
      rQmNda5NLNI7OEhmYYG24xKIxIiFA1CuoHV3U683WFopEPQrBHwKs3MZBkeGWZpfwMZHd62G
      H4gNDeJ/zP8D2yxxdeYOhw+NMX/nNqajE/G1sdQg9fUcthZipC/J3OIKsZDK3EqdE+MjLC5m
      SfXEsVrrRBNR1jJL6NEk+4f6n/FTcWmrBsNJg7mlZZrlNcLJNNX1Ai2zwuxckOH+bkK6H0N7
      uv5zba2AoUFbbdG2W5jra1QtlYjh0sSgsjxNqO8I4/t7qbfa+BSTYrHA6kqOrt402ZklgokE
      YZ9NLl/h0Ngoi/OLpAeHWSsU6Orq2vR95VfzdIVSzC2skM+tMdbn390tgGpEaJsraP4wbtuk
      VGmSWcoQTXaTjoUplErYzQqZlTXCyW6cZg27WSW3VsVv6FSrVQaGD2Co0Ns/RH9PEiMUx3Ca
      tByHpWzmsWspFYvYzTKZXJH0wDDBUISArlKpVB543lBvisVckfVikZZZZGZmhp6RI0SDBpVK
      hUqpxJOObjVNw7YblEoVMkuL1FsO+4f7CUbiRIIGxWKRRmkV2xdiZGSE6nqRVq3AarHG1PQc
      QdVmvWGztNS5+w67rku9tExuvYll3d3q3PtcKmYNy3n6kXPAp1J3dJxmCd0fYXZ2Bsey0P1+
      6qZJqqeX4cG7QdY0H36fTnZuBtN2sew68dQAhupStxy642GKa2tYVp3syqMn3HVcB8uyiMaT
      7Ns3wkBf9+5uAVKpFE4ziBGJYbWaOK1lunrjJGJhNBfabou6mSLZnSLg96FYJkEzSSIZpVho
      EIl1EVYMlLZGu2WSXV0nne7GbzgEiibx5CN6/7/SjCCphIHSUgk1LBJdXYRCAQyfiqbdvUGD
      4YIBqNEkvkCEQ6ZJOBImnOihu2+QfOYOkUQXwVaF9ar9RP+peijJyy8NYq7niUTDBBNdpFMJ
      UBRSqRQuCu1GjWZPP+meNMuLiySTMSLJXpI9vRzeP0KtWiUSNDp0szoFHxYrVYcj48fQp6bu
      3is4EkDTNDQXHMUl4Hv6vrMn3Y2/oaJZPgKpNAHlMGZbx6cqBEMh0l1RlpezHBjuw++DFgZj
      L+1jZnaBSCiO4tcBP+XiKtMzi7z8yss0mxbJ7iQ+davuR6WnK8btbJXDhw+ycGeadmjQWzvB
      4sVSKuSoNBWG+tM87d1a5Rcq8dxKdPWSeMZ1SFcsPE0CIDzt/wFy5JAeNUD2DQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Recovered States of  INDIA' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAboUlEQVR4nO3dSXMc553n8W9mVmXtC6oKQGEjQIIAKS6iJDc9LVvjCEU4ohXdBytmYmJi
      bn3y6/B5DhPjvvQbGB/sUMgKR1iibLlliiLdpiSKIrESW2Er1ILas5bMymUOpGnLWkiKYBVY
      +XxOJIhK/rNQP+TzPPk8+UiO4zgIgkvJ/S5AEPppoAOgaVq/SxCOuYEOgG3b/S5BOOYGOgCC
      8CgiAIKriQAIrub5yx8ajQaDNiLabDb7XYJwzD0MQCQS6Wcdz0w0Gu13CcIx5nn0tzy/urZF
      tlnrdxlfEvcFCHrUfpchPDDQAeiYXVaalX6X8SVn46MiAMeI6AQLriYCILiaCIDgal8JwNbm
      FrZtY1oWjuNgmSZ7e7vU63Vs28Kynnx6wc7mKp98+hk1rQOAbeoUStWnr/45VavVeP/991lc
      XMQwDN5//30cx8E0TX77299imibdbpcrV66wsbHB7373Oz7//HO2t7dZWFgYuOHqfvpKJ1jX
      dZYXbmMZOqHUFJ22hiQraJqGisHSVpF/+qcf432Ca8eJ6WmaZg7F1FhcXCcxlKShm3RqRTRT
      xi8ZaI0m6elT5LL7+INRfJJB01TwSx2aTZ0Ts3Ps724TTaSZTCeP8j3ouWg0Sjwep1KpcPPm
      TTqd+78YLMvC6/Vi2zY3b97EMAxmZ2dpNBqMjY3xm9/8hpdffhlJkvp8BoPjaz/GwUick1Oj
      NDsG4XCE+2+3Tb3ZJRnzYVrf7T872N9BNx1s28JxbErlErv7+0geH3NTCXbzVU7OztJtNihV
      amT39nE8fmanUhxkC3S6JgcH2e98sseFruucPn2ag4MD8vk8KysraJqGz+fD5/Nh2zbZbJaV
      lRWq1SqlUolUKsX4+Dj1er3f5Q8U6e8XxHS7XSRJQpbAkWS0hkYgGEACzK6OhUwoEOSJfgk5
      FtV6i3DAw8bmDmOTkziOQ7V4gKOGScbCBLyg6TZrq0uooRTxgARqmKFYiKBXptW1yeUKJJIJ
      Uomhx/pv9w8LrOjHbxg0aivcvHmT+fl5pqam2N/fp1gsMj4+zs2bN5mYmOCll17i4OCAZDJJ
      o9EgmUxyeHiIruuk02k8noEewe6ZrwSgn2yrSz5/SHJkFNXz9P3z4xqAiVC832UIDxyrXyOy
      4mVsfKzfZQguIoZBBVcTARBc7Vj1AY5apVZFCfj7XcaX+BUvqqL0uwzhgWPVBzhqiiQTVY9X
      AITjRTSBBFcTARBcbaCbQB3LJFct9LuMbxRTA4wGB3Ml3vNioANgWCab7XK/y/hGk6G4CECf
      iSaQ4GoiAIKriQAIrtaTPkA5v0+2WCEcH2ZmchStnMNUo6helaDPg6V3KDfbDD/mLM9BYpom
      V69exXEcwuEwxWKR1157jVgsxpUrV7h06RLNZpNMJsMrr7zCjRs3OHXqFIqiYJomJ0+eJBwO
      9/s0nls9uQLkSzXOnz9Pu1FmfXWR1Xv3aFULHORyXPvTJ9S0FptrK9xdvsfu5ip//Og/+Y5L
      Dp47Ho+HRCJBq9WiXq/TbrcxDANJkpibm6PdbnPz5k263S6Li4v88Ic/pFQqcevWLXK5nPjw
      P6WeBEDBoq5pGKZN15YZHU7g2BZ4Q4wlghyW64yfOEXY76FS15D1NkYvCjsGDMNgfHwcXdfR
      NI1z585RKBSwLAvTNOl0OsTjcebn56nVauzu7mIYBjMzMxiGgWG45Z16NnoyF8i2TPb29hgd
      n8LqNKhqHZKJODYyxVyO0bExwMGxbTrNOrqlkBpJ8rQzZvYOCywc82HQc/ER7ty5w/DwMMFg
      kJ2dHaLRKH6/n+3tbTweDxcuXGB1dZWLFy+ysrLCyZMnMU0Tr9eLZVmEQqF+n8pza6Anwz0P
      AbiQSPe7DFcTo0CCq4kACK4mAiC42kD3AWq1GqFj/Nh3WZKQxTN++mqgJ8NJkoRHFhc54ZuJ
      T4fgaiIAgqsNdB9g//CQtbZ79gn7wfikWHD/hAa6D9C1LXYa7nmW5n9xbHjq++fuIppAgquJ
      AAiuJgIguFpP+gCbm5ukgh52WgohdKamT2BZNl5FRu9aGFoJ3RNnJB5k4fPPsCWJsZmzRP0y
      HlXFNk1sJFSPTEc38Pl86LqO6vOztbXJ6dnZXpzGc+H69eu0Wi0uXrzIH/7wB15++WXOnTvH
      2toaKysrzM7Osra2xtzcHI1Gg9u3b3P58mXS6TTb29u8+uqr/T6FnupJAGTL5KAlEcSka1rc
      /vM19vIap+em6BIgLmvUvA4j8SBds4vlOBj1Au9/vMTIxBReo4Pk8xMLKnSaHSLpCTYXvyA6
      doqAYvbiFJ4bkUiEUqlEpVIhHo+Tz+c5d+4cp06dIpPJUKvV0DSNvb09fvzjH9/f+UdVeeut
      t/jpT3/a7/J7ridNoFQyQqncxOO0wBPGF4rx0ssvMT4+Qbt+iC8cR5Huj8Z6vT7i0ShNrcHk
      yTlOT0+QGB5lKBbCcQDJQSvliY+fxLH0XpT/XPH5fESjUSqVysPNNarVKu+99x5+v5+pqSl8
      Ph+mabKxscHs7CyyLPPGG2/w6aef9rv8nuvJfQDHsTFNG1lyQPaAbaJ3LXxeBb1rEfCrdDo6
      gUAAvdPGtCEY8KN32iheH/KD6TKVQpb1zD5nL76EKjuoqgoSeL5h7DtTyPPR4fF9MNZR+x/z
      Z/E40Gw2icVi1Go1gsEgW1tbTE5O0m63iUajGIaB1+tFlmU8Hg+WZSHLMt1uF5/P1+/T6KmB
      vhHmxgAEPN5+l/FcEaNAgquJAAiuNtBTIWRJIuiiJoGEWFvwpAa6D1Cv14lGo/0uQzjGRBNI
      cDURAMHVRAAEVxvoTnBV7/CH9Vy/y+i7pD/Ajyan+l3GsTTQAbBsh6oupkuIVWLfTDSBBFcT
      ARBcrSdNoL+91SB97YOgHBznm/5NOCqmaeI4DrIsY9s2iqI8/PNf/m6aJh6PB9u2H/48JEl6
      +LpB05MAbGUyhDwOTmgYOjWGhtOYnRYWMrVKmZGxUbbWdxlPx2lbCqMp9+0U0wtvvfUWMzMz
      DA8Pc+vWLaanp7l8+TJXrlwhkUjQ7Xap1Wqk02k2NjYIhUIkk0lkWebEiROMjY31+xSOXE8i
      bbTqbOXrqO0i9zK7LK+ssLC8juJ0KRQOWFrZAqB0WGDh9hfodi+qcp8TJ06wvr7+MASvvPIK
      tm2TyWTY3t7GNE1UVeX27dt873vfIxKJcHh4yO7uLun0YD7GvScB8EfinJlKUWwYhIJhxtIj
      jI6N02k28PiDKLKDosjU601CQZXBnZzRP7Zto+s6sizTbDYfbqpRKBSYnJzE6/UyMTGBruu8
      /vrr3Lp1i06nQzqd5uzZs2xvb/f5DJ6NgZ4LtJXP80cXrQf4JiPBIP9y8qvrpjVNwzRN4vF4
      H6o6Hgb6PoDw7cQGe2IYVHA5EQDB1Qa6CeRVZMbEDooM+fz9LuHYGuhOsFgQIzyKaAIJriYC
      ILiaCIDgagPdCT5stfl/G5v9LuPYSYdC/Lf5uX6XcSwMdAAcHAa2h/8UxLvyV6IJJLiaCIDg
      aiIALqZpGltbW7RaLRYWFmg0GgAUi0Wy2Sy2bbO+vk6n0yGbzVKv12m1WpimSbM5GLtv9qQP
      sLxwG1vyEI6PMJaMYKGwv7dNMOAjGI4TCQWoN9sMxcRNq15xHIcrV65w5swZ9vb28Pv9D1eC
      Xbt2DUVRGBoaQpIkgsEgCwsLmKbJ0NAQhmFw6dKlfp/CkejNFcDj5/z58+jNMn+69iEffnSD
      rmli6m3KhzkyuzlyxUpPShHusyyLZrPJ+vo6sw+2mPriiy+A+0snO50OBwcHRCIRPv74Y2Zm
      ZgiFQpRKJQqFArFYrJ/lH5meBMDUW6ytreHxR4jEk7xwdg4JkDw+JifHkAZ3Nsax5fF4mJiY
      QFEU6vU6+XyeWCxGJpMhEAgQCAS4dOkSu7u7XLhwgZWVFWRZZmZmhsuXLw/MApmezAWyLAvL
      tvF6vNi2ieNIyPKXF1wDR77oeiOX48qBeDDW30uHgvz3+fmvfL3dbiNJEn6/eybP9aQPoCgK
      yoOHMynKV/9L8TSI4yEQCPS7hJ4To0CCq4kACK420FMhAh4PF1Kpfpdx7ERVtd8lHBtiQYzg
      aqIJJLiaCIDgagPdB7BsW+wP8AgRrxdlAB96+7gGOgDlTof3NjP9LuNY+18vnCHpwvH/v3Bv
      9AUBEQDB5UQABFfrSQDqjTrg0Kg3sCwLHAfL+vpNAFr1MkvLKzRaX995/bqFGEarSVfsKfCd
      mabJ9evXaTQarK2tsbq6CsD6+jq///3v2d7e5rPPPiOTyeA4DktLSzSbTVqtFtlsts/VP52e
      dIL3s/tEz5xhf3eH/ewec3OnWV7b4fL3LpE/OCA9OUW5mGN4bBqtcsj4iZPsZjYJqBKh+DDl
      Qo7UxDRacZ9spckLM+NkDxtMjMY4KNYYUm2yTZvJ8UlGEpFenNJAuXbtGoZh0Gg0uHbtGq+9
      9hoAp0+fBqBWq1GtVtnb20NRFK5evcobb7zB7u4usViM8fHxfpb/VHpyBZAc7m96IXuZmDrB
      ialJTkzPINsGtq2zvZPFwEsk6MOxuqyvrZEYSdPq2oS8Dl3LYmdnA4so6dQQm5ubWJ0a9baJ
      49jYjsyp+bM0a8VenM7AaTQaXL58mY8//piTJ0/ef38tC8dxyGQyTE5OUq/XAfjoo49otVoc
      HBxw9+5dkslkn6t/Oj25AoyPJFhYXGR4bBqzUSBfbSGbLZq6B1lRiYejRKJhJAlCsRTnJocJ
      eEHBAkCWFeKRIbqNQ0xPgPHxMSqaQdDnoVG1UEMxVEUiHBG//b+L73//+9y4cYNXX32Ve/fu
      EYvFWFhY4PTp05w+fZpgMIjf7yccDvOTn/yE1dVVkskk8/Pz7O7uMjk52e9T+M4Gei7QRi7H
      e1mxIObbfNN9gE6n44qFMWIUSPhabvjwgwiA4HIiAIKrDfRcoLCq8l8nJ/pdxrEW9Hr7XUJf
      DXQnWCyIER5FNIEEVxMBEFxtoJtA+VKZvNnvKoSndWFkCPkZPTtqoDvBxVaHf7u90e8yhKf0
      7//8Q2Tl2QRANIEEVxMBEFxNBEBwtZ4EYGdzlVuf36amdb7239tag2btEM2ATrPG/kGJymHp
      wVzQv6pUq8++WOFYqlarfPLJJ1iWxQcffMDOzg7Xr1/nnXfeQdd1Wq0WH3zwASsrKywtLXHj
      xg0Mw+Dq1avYts3+/j5ra2vY9pdXTvWkE3xieprmRg6/bLC0sEYyPU5ufxfLsvH6QozGwkjU
      MZUUQb1Ndi9PNOTDG1LZ2ciQHJuikt+j1rGYHNGI+IDoJFFfL6oXjgPTNCmVSiwvL3PhwgWW
      lpZ4/fXX+fDDD/F6vXi9Xqanp8lkMsiyzNDQENlsFk3TsG2bGzdukE6nmZv78vawPW0C1WtV
      LLPD/n6B+PAYoUCQaEBFazS+9Nt+amqU3b08jVoV09TJZLYIRNMkY2EajQZtrYrx95cHYaCl
      UikURfnSfhLFYpFkMoksy9i2jdfrRX/wHCjHcYjFYg9ntUqShGl+dUy8N8OgkoeR1BB+xUIN
      tBiOpwiEApg+D17Fg22ZeFVwVPAqEVTZx+nZJuFgiHogzEhihGalgBKIEg14KVUbTLt7Covr
      LC8v02g0SCQSLC8vc+bMGdrtNhcvXuTu3bukUinW1taYnZ1FkiSq1SrtdptarcbGxgY/+MEP
      6HQ6dLtdvH8z/2mgb4Qt7Gb5v+I+wHPv3//5h3iVZ9NYEaNAgquJAAiuJgIguNpA9wHy5TJF
      U2zA97w7Nxx/ZpPhBjoAYkGM8CiiCSS4mgiA4GoD3QTaL5ZYanz9/CPh+XJ+eIjxSPDIjzvQ
      C2KqHZ23lrf6XYZwBMKq55kEQDSBBFcTARBcTQRAcLWeBKBQLKJrFfLlxiO/V6vXMP9mzUKp
      UERs/iIAGIbB22+//XBHmz/+8Y84jsP7779PtVrFcRyuXr3Kr371K3Rd57333qNcLvPuu+9y
      /fp11tfXyWazHBwcPDxmTzrB5UKW7Q68/OI8C3e/IBQfpp7fJ5WKsV/tEouECXtM8pU2llYk
      OnWWMC3ylRZD4RD1Zp2heJydzBbD0y8wlgj1omzhGIpGo3S7XRzHQVVVNjY20DSNdrtNPB7n
      Rz/6Ef/xH/9BPp+nXq9Tr9ep1WqYpkmlUsEwDN58882Hx+vJFUANRkiEFHLZHF1bIpfPERka
      ZjgWYHx6Dq/c5bBUpXR4wFBylMnx4Qd/z6F3WpRrLSrlQyRMCkWxLNKtVFXF4/EgyzKtVgtN
      0zg4OKBcLrO9vQ3A6uoq8/Pz7O3tUa1WuXPnDtPT01iWRTKZJBQK0Wq1Hh6zJ/cBmq0mQb+f
      Wq1KqVwnkUrg83jxeyV0yYfdbaNVShiSyshQmHxJwycbGKgkolFUL2jNNtV6g2QqTTT8eM+u
      X9zN8m93Np/x2Qm98K+X5jgT9PLJJ58wNjZGLBbDMAzm5uao1+u0223K5TKpVIpUKoUkSdRq
      NXw+H4uLiyQSCWKxGNFolHK5zMjICDDgN8JEAAbHv16a49XJ0SM/rhgFElxNBEBwNREAwdUG
      ug9QrlZxVHds9jbowqoXn0c58uMO9GQ4jywTDYoACN9MNIEEVxMBEFxtoJtApVaHtzbETvGD
      6H+eP0VIffqP70AHQDNMPswcPPobhefOm2enCR3Bx1c0gQRXEwEQXE0EQHC1ngTAMXVu/Oen
      X/l6t5Fne69ARWt/42s/u3mD27e/QP+6/QA6VfbLza98OZvdf5pyhefE7u4ub7/9NoZh8Mtf
      /pJyucytW7f49a9/Ta1Ww7IsfvGLX7CwsMD169d5++232d/f55133mFpaYmFhYXedIKrhzmG
      42EKDYPtxT/jqFFGon7qlQLe+DSFwj6hUIR2pcD4ydNs3VtEjY3zDy+ewXYgINssL90lFIwi
      GVVW96q8eHqceq2EFRxh6ZM1EhMzaLkMc5e+z8Fuhp1snuBIuhenJ/TJ5OQkKysreL1ezp49
      S7fb5fz58xQKBTweD91uF7/fT6VSwbZtXnnlFT7++GPefPNN/vSnP7GxsdGbK0A2f4hhmRT2
      90iNTpAaimKYFqlEDAmZ6dk5AqrE0Mg4UZ9DIDqCZdz/za76A5ycP0c0HGJudhqtrRPxyjQN
      i+FkAsvQSYxOMjGaZHpmhmKhSGJkjHQq3otTE/qoXq9TLBap1WoUCgWKxSLvvvsus7OzyLJM
      p9Ph/PnzlEolWq0Wq6urTE1NcefOHWRZ5oUXXujNXCBd1/H5VHTdQHrwkFMZm1qjSTgSRVEU
      bMsEJLxehXKpQjAcIuD3P3itD8MwUFUVrV7FxEMkqFKtNYjE4rTqFdRgFKNVxxeKoUgOkgQr
      B4f878/WnvXpCX3w8zf+EUurUyqVSCQSVCoVVFVFURRarRaO4zA1NcXh4SGpVApZlqnVaqTT
      aXZ2dpiYmKDb7Q72ZLi7O1kRgAH18zf+kUTg6XdJFKNAgquJAAiuNtBTISQJPLLYIGMQHdVP
      daD7AGKDDOFRRBNIcDURAMHVRAAEVxvoTvB2rsz/+flv+l2GcIwNdADaHYNPl3f6XYZwjIkm
      kOBqIgCCq4kACK7Wkz7A8t1PiYzMQjtPuenl5GQSWQ1QyO0RH0oRi4SoVGvEh4bodjqgKDQ1
      jfhQgkatgt+nspcrkE6Pk9vZIjkxRUj1YNqgt5uEonHUZ/DUMGHw9SQAvvAQnUYZCQdVtsms
      r1JswWjcj6F3MI0UK8uLJCbGqR00OXf+BEsLCwylhjksN7j4whyNhkZHz2A2NZLYfHHrC+bP
      zbOyvIgnPMzlSy/04lSEAdOjUSAZxdYgmEBql6gbEqoiEQhHiYZUSoUikWQau9tmbGKKdq1C
      JDmKZXVJRlUOCocMpYaxjQ5IJrVGk9ToOJLRxBMcQna6vTkNYeD0JAAnZ2b++peJceb/7t+T
      w+N/95VhHncx4z+kJr57YYLr9SQAf1kFJgjHjRgFElxNBEBwtYGeCuFTvcyfGOl3GcIxJhbE
      CK728Apg2zaDlgXbtrGsr3uknCDc9zAA7XZ74AKg6zoez9G18mzbRpaPptt0lMc66uO5qbaH
      n45QKHRkBz0ubNsmHA4f6fGO6w9S1PbkHMcRo0BP4ig/FEd5rKM+nltqkyQJ5Wc/+9nPjuyI
      x4yu69RKBbb28kRUh53DBvGAh4XVTUaHk498/fbGPbKFMgGvw/K9DSLRCOsbO6SSQywu3CU5
      PMqTPHVld2MVWw1xsL1BtWnQrBRwvEH0eolcRSMeffyr1cFuhlypjl8yWL63STQWYW19h1Qy
      zsLCXYZHRnnc+49apcjqxhaKGiC3s0m11aVZLuD4QnSqRfK1FvHIo2tzHJv1xTv4EqNUc7ts
      7eUZivpZWlpB8YfJbK6RSo2wsbqIL5pAVb79w9yql9ncKxALqdy7d49210GrFMgWqnjtFsWm
      TUjSWc7kGUl++7NgHcdmfeEO/mQar2Rxd2GZVDw0+FeAqtbh5LCfnb0Sh9UapWIerW081mun
      Zk4idTts58q8eGGO7HaGcrGI1qySO6xiP0GXqaNVKFc1GtUqki+Go2u0uibFfIFitUGnUXmC
      s7LY2NjCMk32ChVevDDHfmaLUvEQTauSP6zxJN25er2GxyNTyuWQA0M4HY22aVLM5R/UVn2s
      4ziOQ8gj07GgqunMDPu4eWeLMxcuUC5kMbUShVqTfDaP0X304ISsBnCMNorXz6npE2iNOk3D
      IeZ3KFc0DkslsvlDTL31GLXZBL33azvYydA2TbZ3soMfAMsy6XQMFI9MLOhlt9wmHvQ+1mvX
      VleZmjuDikWn0wbFw/DoMHdu32NifPiJ6igWihh6i2K5SrdrYJoWkqJCV0P2PukzLiWiQynC
      ik5Tt+i026B4GR5JcefOOuNjqSc6Wqulk06n0fUW3a5B90FtjtFA8T7+PsuyrKCq99/b++97
      F78q0+7oWA5Ekmn2l28RH5t8rOP5/X4kwOxobOwVODt3Css06Xa7yLKMX7HRTOmRV5L7tXlQ
      VQ9gU6pUqRZztNrtwb8PINkGxVqHyeE4lsdLo97C55WJxWKPeLXNvaUlHE+A6RNptncOOHXq
      BB3doqU1CARUwpH4EzWBjHYLU/JQPzwAf4yQT0FxTCxvCNtoEYs9/iPdy8UD6h2YGI6yuXPA
      7KkTtHWbllYn4FcJRx+/Nr3VILObZWJqBq2cQwrECKoKst3FUcNYRvsx3i+wuh1WV+7hCcVJ
      J4Ic1jrMTI2yub7F2ImT2N0O7XaLcDCI4g8+cuf3QnaX3GGF4eEU5XKVaCJF2GvT0CVG4kEk
      j0K9aaEq9iPrs7ptVlfW8ISGmDs1Rb1WIxoODn4AxI0w4dsMfBNIEL6NCIDgaiIAguvYtkWt
      XscWN8IEN7r2h/fZ3tun1WqLAAjuU2l2efHcC/z5ow/EKJDgPp//+RpN20vEI4kACO4mmkCC
      q/1/3T6JLDJeRYYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Recoveries Countries' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
